(ns cassiel.cubewar.db
  "Database wrapper."
  (:require (clojure.java [jdbc :as sql]))
  (:use [slingshot.slingshot :only [try+ throw+]])
  (:import [java.sql BatchUpdateException]))

(defprotocol LEAGUE
  "Interface to DB representing a league."
  (clear [this])
  (num-users [this]))

(def spec-template
  {:subprotocol "hsqldb"
   :user "SA"
   :password ""})

(defn- mem-db-spec
  "A specification for an in-memory database."
  [name]
  (assoc spec-template
    :subname
    (str "mem:" name)))

(defn- file-db-spec
  "A specification for a file-based database. Path, starting with '/',
   rooted in home directory."
  [path]
  (assoc spec-template
    :subname
    (str "file:" (System/getProperty "user.home") path)))

(def ID [:id "INTEGER" "GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY"])

(defn mem-db
  "Create a memory-based database (for testing)."
  [name]
  (let [db (mem-db-spec name)]
    (reify LEAGUE
      (clear [this]
        (sql/with-connection db
          (try+
           (sql/drop-table :Users)
           (catch BatchUpdateException _ this))

          (sql/create-table
           :Users
           ID
           [:Username "VARCHAR(255)" "NOT NULL"]
           [:Password "VARCHAR(255)" "NOT NULL"]))

        this)

      (num-users [this]
        (sql/with-connection db
          (sql/with-query-results rows
            ["SELECT Count(*) AS C FROM Users"]
            (:c (first rows))))
        )))
  )
